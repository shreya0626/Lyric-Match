{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\lyric-match-backend\\\\lyric-match-backend\\\\lyric-match-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lyric, setLyric] = useState('');\n  const [song, setSong] = useState('');\n  const [userGuess, setUserGuess] = useState('');\n  const [result, setResult] = useState('');\n  const [correctSong, setCorrectSong] = useState('');\n  const generateLyric = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/generate-lyric');\n      setLyric(response.data.lyric);\n      setSong(response.data.song);\n      setResult('');\n      setCorrectSong('');\n    } catch (error) {\n      console.error('Error fetching lyric snippet:', error);\n    }\n  };\n  const checkAnswer = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/check-answer', {\n        userGuess,\n        correctSong: song\n      });\n      setResult(response.data.isCorrect ? 'Correct!' : 'Incorrect!');\n      setCorrectSong(response.data.correctSong);\n    } catch (error) {\n      console.error('Error checking answer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lyric Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateLyric,\n      children: \"Generate Lyric Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), lyric && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyric-snippet\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: lyric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your guess\",\n      value: userGuess,\n      onChange: e => setUserGuess(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAnswer,\n      children: \"Check Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), !result.includes('Correct') && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The correct song was: \", correctSong]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"twAvKNc9SATn4bya2Y6kfyutg5s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","lyric","setLyric","song","setSong","userGuess","setUserGuess","result","setResult","correctSong","setCorrectSong","generateLyric","response","get","data","error","console","checkAnswer","post","isCorrect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","includes","_c","$RefreshReg$"],"sources":["D:/downloads/lyric-match-backend/lyric-match-backend/lyric-match-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n    const [lyric, setLyric] = useState('');\n    const [song, setSong] = useState('');\n    const [userGuess, setUserGuess] = useState('');\n    const [result, setResult] = useState('');\n    const [correctSong, setCorrectSong] = useState('');\n\n    const generateLyric = async () => {\n        try {\n            const response = await axios.get('http://localhost:5000/generate-lyric');\n            setLyric(response.data.lyric);\n            setSong(response.data.song);\n            setResult('');\n            setCorrectSong('');\n        } catch (error) {\n            console.error('Error fetching lyric snippet:', error);\n        }\n    };\n\n    const checkAnswer = async () => {\n        try {\n            const response = await axios.post('http://localhost:5000/check-answer', {\n                userGuess,\n                correctSong: song\n            });\n            setResult(response.data.isCorrect ? 'Correct!' : 'Incorrect!');\n            setCorrectSong(response.data.correctSong);\n        } catch (error) {\n            console.error('Error checking answer:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Lyric Match</h1>\n            <button onClick={generateLyric}>Generate Lyric Snippet</button>\n            {lyric && (\n                <div className=\"lyric-snippet\">\n                    <p>{lyric}</p>\n                </div>\n            )}\n            <input\n                type=\"text\"\n                placeholder=\"Enter your guess\"\n                value={userGuess}\n                onChange={(e) => setUserGuess(e.target.value)}\n            />\n            <button onClick={checkAnswer}>Check Answer</button>\n            {result && (\n                <div className=\"result\">\n                    <p>{result}</p>\n                    {!result.includes('Correct') && <p>The correct song was: {correctSong}</p>}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}